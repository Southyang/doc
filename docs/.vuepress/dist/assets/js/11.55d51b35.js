(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{599:function(t,a,s){"use strict";s.r(a);var n=s(32),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第五章-无损数据压缩算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-无损数据压缩算法"}},[t._v("#")]),t._v(" 第五章 无损数据压缩算法")]),t._v(" "),s("p",[t._v("数据压缩的类型：")]),t._v(" "),s("ul",[s("li",[t._v("无损压缩")]),t._v(" "),s("li",[t._v("有损压缩")])]),t._v(" "),s("h2",{attrs:{id:"_1-信息熵编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-信息熵编码"}},[t._v("#")]),t._v(" 1. 信息熵编码")]),t._v(" "),s("h3",{attrs:{id:"_1-1-基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基本概念"}},[t._v("#")]),t._v(" 1.1 基本概念")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("信息量是对不确定性的度量")])]),t._v(" "),s("li",[s("p",[t._v("某事件的信息量为 I ， 事件发生概率为 p ， 则信息量与事件概率之间的关系为\n$$ {信息量和事件概率的关系}\nI_i = log_2 \\frac 1 p_i = -log_2 p_i\n$$")])]),t._v(" "),s("li",[s("p",[t._v("信源是指构成一类报文的基本符号的集合；报文由基本符号组合而成，基本符号被称为码元，码元意为基本编码单元")])]),t._v(" "),s("li",[s("p",[t._v("一个信源的所有码元的平均信息量就称为该信源的信息熵\n$$\nH(S) = \\sum_{i=0}^n p_i I_i = \\sum_{i=0}^n p_i log_2 \\frac 1 p_i\n$$")])]),t._v(" "),s("li",[s("p",[t._v("编码是用比特组合来表示码元的技术或方法")])]),t._v(" "),s("li",[s("p",[t._v("熵编码是指在不丢失任何信息的前提下，基于码元的统计特性，对码元或直接对报文本身进行编码，使得最后存储该报文所需要的平均比特数接近信源的信息熵")])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-香农-范诺编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-香农-范诺编码"}},[t._v("#")]),t._v(" 1.2 香农-范诺编码")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("码元")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("出现的次数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("编码")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("频度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("A")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("00")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.375")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("B")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("01")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.175")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("C")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.175")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("D")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("100")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.150")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("E")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("101")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.125")])])])]),t._v(" "),s("ul",[s("li",[t._v("对码元频度进行排序")]),t._v(" "),s("li",[s("code",[t._v("循环处理")]),t._v("，将排列好的码元分割为两个部分使频度之和最接近，直至不能再分割")]),t._v(" "),s("li",[t._v("编码赋值，坚持同一个规则赋值。对频度大的赋0，小的赋1；或者反之")]),t._v(" "),s("li",[t._v("最终得到的码元编码是不等长编码")]),t._v(" "),s("li",[t._v("压缩比：压缩前的原始报文所需要的存储空间与压缩后所需要的存储空间之比（压缩前报文采用等长编码）")])]),t._v(" "),s("h3",{attrs:{id:"_1-3-赫夫曼编码-比香农范诺算法的压缩效率高一些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-赫夫曼编码-比香农范诺算法的压缩效率高一些"}},[t._v("#")]),t._v(" 1.3 赫夫曼编码 （比香农范诺算法的压缩效率高一些）")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("码元")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("出现的次数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("编码")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("频度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("A")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.375")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("B")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("000")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.175")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("C")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("001")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.175")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("D")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("010")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.150")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("E")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("011")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0.125")])])])]),t._v(" "),s("ul",[s("li",[t._v("初始化处理，对码元概率进行排序，按由大到小（或由小到大）")]),t._v(" "),s("li",[t._v("概率最小的两个码元概率相加得到新节点，重复直至只剩一个节点")]),t._v(" "),s("li",[t._v("编码赋值，坚持同一个规则赋值。对频度大的赋0，小的赋1；或者反之")]),t._v(" "),s("li",[t._v("要注意的问题\n"),s("ul",[s("li",[t._v("赫夫曼编码没有错误保护")]),t._v(" "),s("li",[t._v("赫夫曼编码是可变长度编码，很难随意查找或调用压缩文件中间的内容")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-4-算数编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-算数编码"}},[t._v("#")]),t._v(" 1.4 算数编码")]),t._v(" "),s("ul",[s("li",[t._v("算法编码并不对码元进行编码，而是直接对报文进行处理")]),t._v(" "),s("li",[t._v("已知条件还是信源的码元集合及其概率集合")]),t._v(" "),s("li",[t._v("按照码元概率将初始区间 [0.0 ,  1.0) 分割为n个子区间")]),t._v(" "),s("li",[t._v("根据报文顺序选择当前码元对应的子区间，对该子区间再进行分割，直至读取完整个报文")]),t._v(" "),s("li",[t._v("最终的输出结果是最后一次选择的子区间的下界，从而将报文转换为了实数")]),t._v(" "),s("li",[t._v("译码算法：利用下界，从第一个码元开始倒推")])]),t._v(" "),s("h2",{attrs:{id:"_2-行程编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-行程编码"}},[t._v("#")]),t._v(" 2. 行程编码")]),t._v(" "),s("p",[t._v("行程编码是指对报文逐行进行统计，通过记录连续排列在一起的相同数据单元的数量以及该数据单元本身，以压缩存储空间的一种编码算法")]),t._v(" "),s("ul",[s("li",[t._v("两种记录方式 eg: AAABB     ACCCA\n"),s("ul",[s("li",[t._v("逐行记录每个行程的终点符号 A,3,B,5     A,1C,4,A,5")]),t._v(" "),s("li",[t._v("逐行记录每个行程的长度 A,3,B,2     A,1,C,3,A,1")])])]),t._v(" "),s("li",[t._v("行程编码是连续精确的编码，被归为熵编码，是基于统计特性的")])]),t._v(" "),s("h2",{attrs:{id:"_3-词典编码-具体伪代码见p112"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-词典编码-具体伪代码见p112"}},[t._v("#")]),t._v(" 3. 词典编码 （具体伪代码见P112）")]),t._v(" "),s("h3",{attrs:{id:"_3-1-基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本概念"}},[t._v("#")]),t._v(" 3.1 基本概念")]),t._v(" "),s("ul",[s("li",[t._v("非统计特性的编码技术")]),t._v(" "),s("li",[t._v("根据是数据本身存在大量的重复或冗余")]),t._v(" "),s("li",[t._v("分类\n"),s("ul",[s("li",[t._v("第一类词典编码算法：隐式地查找正在压缩的序号序列是否在以前处理的数据中出现过")]),t._v(" "),s("li",[t._v("第二类词典编码算法：显示地建立短语词典")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-2-l777算法-第一类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-l777算法-第一类"}},[t._v("#")]),t._v(" 3.2 L777算法 （第一类）")]),t._v(" "),s("ul",[s("li",[t._v("在已经处理过的符号序列中寻找与待编码符号序列相同的模式，如果找到匹配的模式，就对该模式进行索引，生成一个指针")]),t._v(" "),s("li",[t._v("信息：搜索窗口长度， （偏移量，匹配长度，下一个字符）")]),t._v(" "),s("li",[t._v("eg：AABCAABCCAABCE , 搜索窗口为10")]),t._v(" "),s("li",[t._v("输出结果为： (0,0,A) (1,1,B) (0,0,C) (4,4,C) (5,4,E)")]),t._v(" "),s("li",[t._v("改进\n"),s("ul",[s("li",[t._v("输出数据格式可以简化")]),t._v(" "),s("li",[t._v("匹配模式的最小长度需要加大")]),t._v(" "),s("li",[t._v("有匹配模式的情况下输出数据不捎带next_char")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-3-lzss算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-lzss算法"}},[t._v("#")]),t._v(" 3.3 LZSS算法")]),t._v(" "),s("ul",[s("li",[t._v("在L777算法基础上设置了最小匹配长度，改进了输出格式")]),t._v(" "),s("li",[t._v("eg：AABBCBBAABC，搜索窗口为10，最小匹配长度为2")]),t._v(" "),s("li",[t._v("输出结果为：AABBC(3,2)(7,3)C")])]),t._v(" "),s("h3",{attrs:{id:"_3-4-lz78算法-第二类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-lz78算法-第二类"}},[t._v("#")]),t._v(" 3.4 LZ78算法 （第二类）")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n    将当前编码位置指针pointer指向message开始位置"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Dictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//压缩主体")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pointer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next_char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C in Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将当前编码位置指针pointer往前移动"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t将"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index of P in Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("添加到compressed_message尾部"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" address of P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("作为新词条添加到Dictionary中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将当前编码位置指针pointer往前移动"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("当前编码位置指针pointer到达message尾部"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("eg：ABBCBCABA")])]),t._v(" "),s("li",[s("p",[t._v("输出结果为：(0,A)(0,B)(2,C)(3,A)(2,A)")])]),t._v(" "),s("li",[s("p",[t._v("编码字典为：0 -> NULL; 1 -> A; 2 -> B; 3 -> BC")])]),t._v(" "),s("li",[s("p",[t._v("解码倒推即可")])])]),t._v(" "),s("h3",{attrs:{id:"_3-5-lzw算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-lzw算法"}},[t._v("#")]),t._v(" 3.5 LZW算法")]),t._v(" "),s("ul",[s("li",[t._v("在LZ78算法的基础上改进了初始词典和输出内容")])]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n    加载带有基本字符集的词典Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    将当前编码位置指针pointer指向message开始位置"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Dictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//压缩主体")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pointer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("next_char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C in Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将当前编码位置指针pointer往前移动"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t将"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index of P in Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("添加到compressed_message尾部"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" address of P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("作为新词条添加到Dictionary中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            将当前编码位置指针pointer往前移动"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("当前编码位置指针pointer到达message尾部"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            将"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index of P in Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("添加到compressed_message尾部"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br")])]),s("ul",[s("li",[t._v("eg：ABBABABAC，初始词典为：1 -> A, 2- > B, 3 -> C")]),t._v(" "),s("li",[t._v("输出结果为：(1)(2)(2)(4)(7)(3)，最终词典为：1 -> A, 2- > B, 3 -> C, 4 -> AB, 5 -> BB, 6 -> BA, 7 -> ABA, 8 -> ABAC")]),t._v(" "),s("li",[t._v("解码初始词典同上，倒推即可")])])])}),[],!1,null,null,null);a.default=e.exports}}]);